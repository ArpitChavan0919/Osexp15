#include <stdio.h>

int main() {
    int p, c, i, j, count = 0, terminate;
    int alc[5][3], max[5][3], need[5][3], safe[5];
    int available[3], done[5];

    printf("Enter the number of processes and resources: ");
    scanf("%d %d", &p, &c);

    printf("Enter allocation matrix (%dx%d):\n", p, c);
    for (i = 0; i < p; i++)
        for (j = 0; j < c; j++)
            scanf("%d", &alc[i][j]);

    printf("Enter maximum resource requirement matrix (%dx%d):\n", p, c);
    for (i = 0; i < p; i++)
        for (j = 0; j < c; j++)
            scanf("%d", &max[i][j]);

    printf("Enter available resources (%d values):\n", c);
    for (i = 0; i < c; i++)
        scanf("%d", &available[i]);

    // Calculate need matrix
    printf("\nNeed Matrix:\n");
    for (i = 0; i < p; i++) {
        for (j = 0; j < c; j++) {
            need[i][j] = max[i][j] - alc[i][j];
            printf("%d\t", need[i][j]);
        }
        printf("\n");
    }

    for (i = 0; i < p; i++)
        done[i] = 0;

    while (count < p) {
        int progress = 0;
        for (i = 0; i < p; i++) {
            if (!done[i]) {
                int canAllocate = 1;
                for (j = 0; j < c; j++) {
                    if (need[i][j] > available[j]) {
                        canAllocate = 0;
                        break;
                    }
                }
                if (canAllocate) {
                    for (j = 0; j < c; j++)
                        available[j] += alc[i][j];
                    safe[count++] = i;
                    done[i] = 1;
                    progress = 1;
                }
            }
        }
        if (!progress) {
            printf("\nSafe sequence does not exist (System is in unsafe state)\n");
            return 0;
        }
    }

    printf("\nAvailable resources after completion:\n");
    for (i = 0; i < c; i++)
        printf("%d\t", available[i]);

    printf("\nSafe sequence:\n");
    for (i = 0; i < p; i++)
        printf("P%d\t", safe[i]);

    printf("\n");
    return 0;
}

example o/p-
Enter the number of processes and resources: 5 3
Enter allocation matrix (5x3):
0 1 0
2 0 0
3 0 2
2 1 1
0 0 2
Enter maximum resource requirement matrix (5x3):
7 5 3
3 2 2
9 0 2
2 2 2
4 3 3
Enter available resources (3 values):
3 3 2
